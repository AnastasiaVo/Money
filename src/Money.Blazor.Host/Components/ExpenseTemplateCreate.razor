@inherits ModalDialog

<Modal @ref="Modal" Title="Create a new Expense Template" IsOverflow="true">
    <ChildContent>
        <Validation ErrorMessages="@ErrorMessages" />
        <div class="form-group">
            <label for="expense-amount">Amount:</label>
            <div class="input-group">
                <AmountBox Id="expense-amount" AutoFocus="true" AutoSelect="true" @bind-Value="@Amount" />
                <div class="input-group-append">
                    @if (Currencies != null)
                    {
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                            @(Currencies.FirstOrDefault(c => c.UniqueCode == Currency)?.Symbol ?? EmptyCurrency)
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item cursor-pointer" @onclick="(() => Currency = null)">@EmptyCurrency</a>

                            @foreach (var currency in Currencies)
                            {
                                <a class="dropdown-item cursor-pointer" @onclick="(() => Currency = currency.UniqueCode)">@currency.Symbol</a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="expense-description">Description:</label>
            <input type="text" class="form-control" id="expense-description" @bind="@Description" />
        </div>
        <div class="form-group">
            <label>Category:</label>
            @if (Categories != null)
            {
                <div class="form-row">
                    @foreach (var category in Categories)
                    {
                        <div class="col-6 col-md-4 mb-2">
                            <button type="button" class="btn btn-block btn-selectable h-100 @(category.Key.Equals(CategoryKey) ? "btn-selectable-selected" : "") @category.Color.SelectAccent("back-dark", "back-light")" style="background-color: @category.Color.ToHashCode();" @onclick="@(() => CategoryKey = category.Key)">
                                <div>
                                    <h2>@category.Icon</h2>
                                </div>
                                <div class="text-truncate">
                                    <strong>@category.Name</strong>
                                </div>
                                <div class="text-truncate">
                                    <span>@category.Description</span>
                                </div>
                            </button>
                        </div>
                    }
                </div>
            }
        </div>
        <div class="checkbox">
            <label>
                <input type="checkbox" @bind="IsFixed" />
                Fixed
                <span class="text-muted">(doesn't shown in summary)</span>
            </label>
        </div>
    </ChildContent>
    <Buttons>
        <button class="btn btn-primary" @onclick="@OnSaveClick">Create</button>
    </Buttons>
</Modal>