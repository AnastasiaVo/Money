@inherits ModalDialog

<Modal @ref="Modal" Title="@Title">
    <ChildContent>
        @if (Templates != null)
        {
            <style>
                .card.card-hover {
                    height: calc(100% - 15px);
                }
            </style>
            <div class="form-row">
                @foreach (var model in Templates)
                {
                    <div class="col-4">
                        <div class="card card-hover cursor-pointer" @onclick="(() => ApplyTemplate(model))">
                            <div class="card-body">
                                @if (model.Amount != null)
                                {
                                    <div>
                                        <strong>
                                            @CurrencyFormatter.Format(model.Amount)
                                        </strong>
                                    </div>
                                }

                                @if (!model.CategoryKey.IsEmpty)
                                {
                                    <p class="m-0 @FindCategoryColor(model.CategoryKey)?.SelectAccent("back-dark", "back-light")">
                                        <span class="badge" style="background-color: @FindCategoryColor(model.CategoryKey)?.ToHashCode()">@FindCategoryName(model.CategoryKey)</span>
                                    </p>
                                }

                                @if (!String.IsNullOrEmpty(model.Description))
                                {
                                    <p>
                                        <small>
                                            @model.Description
                                        </small>
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <Validation ErrorMessages="@ErrorMessages" />
        <div class="form-group">
            <label for="expense-amount">Amount:</label>
            <div class="input-group">
                <AmountBox Id="expense-amount" AutoFocus="true" AutoSelect="true" @bind-Value="@Amount" />
                <div class="input-group-append">
                    @if (Currencies != null)
                    {
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                            @Currencies.FirstOrDefault(c => c.UniqueCode == Currency)?.Symbol
                        </button>
                        <div class="dropdown-menu">
                            @foreach (var currency in Currencies)
                            {
                                <a class="dropdown-item cursor-pointer" @onclick="(() => Currency = currency.UniqueCode)">@currency.Symbol</a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="expense-description">Description:</label>
            <input type="text" class="form-control" id="expense-description" @bind="@Description" />
        </div>
        <div class="form-group">
            <label for="expense-when">When:</label>
            <DateBox Id="expense-when" @bind-Value="When" />
        </div>
        <div class="form-group">
            <label>Category:</label>
            @if (Categories != null)
            {
                <div class="form-row">
                    @foreach (var category in Categories)
                    {
                        <div class="col-6 col-md-4 mb-2">
                            <button type="button" class="btn btn-block btn-selectable h-100 @(category.Key.Equals(CategoryKey) ? "btn-selectable-selected" : "") @category.Color.SelectAccent("back-dark", "back-light")" style="background-color: @category.Color.ToHashCode();" @onclick="@(() => CategoryKey = category.Key)">
                                <div>
                                    <h2>@category.Icon</h2>
                                </div>
                                <div class="text-truncate">
                                    <strong>@category.Name</strong>
                                </div>
                                <div class="text-truncate">
                                    <span>@category.Description</span>
                                </div>
                            </button>
                        </div>
                    }
                </div>
            }
        </div>
        <div class="checkbox">
            <label>
                <input type="checkbox" @bind="IsFixed" />
                Fixed
                <span class="text-muted">(doesn't shown in summary)</span>
            </label>
        </div>
    </ChildContent>
    <Buttons>
        <button class="btn btn-primary" @onclick="@OnSaveClick">@SaveButtonText</button>
    </Buttons>
</Modal>
<Confirm @ref="PrerequisitesConfirm" Message="To create an expense, you need to first create a currency and category." OnConfirmed="OnPrerequisitesConfirmed" />
