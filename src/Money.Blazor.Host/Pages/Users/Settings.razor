@using Money.Models.Sorting
@using Money.Components.Settings
@page "/user/settings"
@attribute [Authorize]

<UserHead />

<div class="row my-4 mx-1">
    @foreach (var viewModel in ViewModels)
    {
        <div class="col-12 col-md-auto mb-4">
            <button class="btn btn-light text-truncate mw-100" @onclick="viewModel.Edit">
                @if (viewModel.Icon != null)
                {
                    <Icon Identifier="@viewModel.Icon" class="mr-1" />
                }

                <strong>
                    @(viewModel.Title + ": ")
                </strong>
                @(viewModel.Model?.Value ?? viewModel.DefaultValue)
            </button>
        </div>
    }
</div>

<PropertyDialog @ref="PriceDecimalsEditor" Model="@PriceDecimals" Title="Set price decimals">
    <div class="form-group">
        <input type="text" class="form-control" @bind="PriceDecimals.CurrentValue" data-autofocus />
    </div>
</PropertyDialog>


<PropertyDialog @ref="DateFormatEditor" Model="@DateFormat" Title="Set date format">
    <div class="form-group">
        <input type="text" class="form-control" @bind="DateFormat.CurrentValue" data-autofocus />
    </div>
</PropertyDialog>

<PropertyDialog @ref="MobileMenuEditor" Model="@MobileMenu" Title="Modify mobile menu">
    @if (MobileMenu.AvailableModels != null && MobileMenu.SelectedIdentifiers != null)
    {
        foreach (var model in MobileMenu.AvailableModels)
        {
            var isContained = MobileMenu.SelectedIdentifiers.Contains(model.Identifier);
            Action handler = isContained ? () => MobileMenu.SelectedIdentifiers.Remove(model.Identifier) : () => MobileMenu.SelectedIdentifiers.Add(model.Identifier);

            <div @key="model.Identifier" class="alert @(isContained ? "alert-primary" : "alert-light") cursor-pointer" @onclick="handler">
                <Icon Identifier="@model.Icon" />
                @model.Text
            </div>
        }
    }
</PropertyDialog>

<PropertyDialog @ref="SummarySortEditor" Model="@SummarySort" Title="Set summary sort">
    <div class="form-group">
        <label for="summary-sort-property">Field:</label>
        <select class="form-control" id="summary-sort-property" @bind="SummarySort.Property">
            @foreach (var item in SummarySort.Properties)
            {
                <option value="@item.Value">@item.Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="summary-sort-order">Direction:</label>
        <select class="form-control" id="summary-sort-order" @bind="SummarySort.Direction">
            @foreach (var item in SummarySort.Directions)
            {
                <option value="@item.Value">@item.Name</option>
            }
        </select>
    </div>
</PropertyDialog>