@page "/templates"
@attribute [Authorize]

<Money.Components.Title Icon="redo" Main="Expense Templates" Sub="List of templates for common expenses" ButtonText="New Template" ButtonClick="@(() => { CreateModal.Show(); StateHasChanged(); })" />
<ExceptionPanel />

<ExpenseTemplateCreate @ref="CreateModal" />

<div class="row">
    @foreach (var model in Models)
    {
        <div class="col-12 col-sm-6 col-md-4 col-xl-3">
            <div class="card card-hover">
                <div class="card-body">
                    @if (model.Amount != null)
                    {
                        <h3 class="m-0">
                            @CurrencyFormatter.Format(model.Amount)
                        </h3>
                    }

                    @if (!model.CategoryKey.IsEmpty)
                    {
                        <p class="m-0 @FindCategoryColor(model.CategoryKey)?.SelectAccent("back-dark", "back-light")">
                            <span class="badge" style="background-color: @FindCategoryColor(model.CategoryKey)?.ToHashCode()">@FindCategoryName(model.CategoryKey)</span>
                        </p>
                    }

                    @if (!String.IsNullOrEmpty(model.Description))
                    {
                        <p>
                            @model.Description
                        </p>
                    }

                    <div class="controls text-right">
                        <IconButton Icon="trash-alt" ToolTip="Delete" Click="@(() => { ToDeleteKey = model.Key; DeleteMessage = $"Do you really want to delete expense template {CurrencyFormatter.Format(model.Amount)} '{model.Description}'?"; DeleteConfirm.Show(); StateHasChanged(); })" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<Confirm @ref="DeleteConfirm" Message="@DeleteMessage" OnConfirmed="@Delete" />