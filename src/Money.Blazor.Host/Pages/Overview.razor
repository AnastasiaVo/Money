@typeparam T

<Title Icon="calendar" Main="@Title" Sub="@SubTitle">
    <ButtonContent>
        <ExpenseCreateButton OnClick="CreateModal.Show" />
        @{
            var trendsButton = TrendsTitleUrl();
        }
        @if (trendsButton != null)
        {
            <button class="btn btn-secondary" @onclick="(() => Navigator.Open(trendsButton.Value.url))">
                <Icon Prefix="fas" Identifier="chart-bar" />
                <span class="d-none d-md-inline">
                    @trendsButton.Value.title
                </span>
            </button>
        }
    </ButtonContent>
</Title>
<ExceptionPanel />

<OutcomeCreate @ref="CreateModal" CategoryKey="@CategoryKey" />
<Confirm @ref="DeleteConfirm" Message="@DeleteMessage" OnConfirmed="@OnDeleteConfirmed" />

<div class="overview">
    <Loading Context="@Loading" IsOverlay="true">
        @{
            var incomeUrl = ListIncomeUrl();
            var trendsUrl = TrendsSelectedPeriodUrl();
        }
        @if (incomeUrl != null || trendsUrl != null)
        {
            <ul class="nav nav-pills float-left">
                @if (incomeUrl != null)
                {
                    <li>
                        <a class="nav-link" href="@incomeUrl">Incomes</a>
                    </li>
                }
                <li>
                    <a class="nav-link active" href="@Navigator.UrlCurrent()">Expenses</a>
                </li>
                @if (trendsUrl != null)
                {
                    <li>
                        <a class="nav-link" href="@trendsUrl">Trends</a>
                    </li>
                }
            </ul>
        }
        @if (Items != null)
        {
            if (Items.Count > 0)
            {
                <SortButton TType="@OutcomeOverviewSortType" @bind-Current="@SortDescriptor" Changed="@OnSortChanged" />
                <div class="clear"></div>

                <div class="cards">
                    <CascadingValue Value="@this">
                        @foreach (var item in Items)
                        {
                            <OutcomeCard Model="@item" />
                        }
                    </CascadingValue>
                </div>

                <Paging Context="@PagingContext" />
            }
            else
            {
                <Alert Title="No data." Message="Let's add some expenses." Mode="@AlertMode.Warning" />
            }
        }
    </Loading>
</div>

<OutcomeAmount @ref="AmountEditModal" OutcomeKey="@SelectedItem?.Key" Amount="@(SelectedItem?.Amount?.Value ?? 0)" Currency="@SelectedItem?.Amount?.Currency" />
<OutcomeDescription @ref="DescriptionEditModal" OutcomeKey="@SelectedItem?.Key" Description="@SelectedItem?.Description" />
<OutcomeWhen @ref="       DescriptionEditModal" OutcomeKey="@SelectedItem?.Key" When="@(SelectedItem?.When ?? DateTime.MinValue)" />
