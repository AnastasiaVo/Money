<Page
    x:Class="Money.Views.Template"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Money.Views.Controls"
    xmlns:converters="using:Money.Views.Converters"
    xmlns:triggers="using:Money.Views.StateTriggers"
    xmlns:vm="using:Money.ViewModels"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:BoolConverter x:Key="TrueToFalseConverter" TrueValue="False" FalseValue="True" />

        <Style x:Key="MenuItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="MinWidth" Value="{StaticResource SplitViewCompactPaneThemeLength}"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                         Control.IsTemplateFocusTarget="True"
                         SelectionCheckMarkVisualEnabled="False"
                         PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                         PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                         SelectedBackground="Transparent"
                         SelectedForeground="{ThemeResource SystemControlForegroundAccentBrush}"
                         SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                         PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                         SelectedPressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                         DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         ContentMargin="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MainMenuToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
            <Setter Property="MinHeight" Value="48" />
            <Setter Property="MinWidth" Value="160" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="Content" Value="&#xE700;" />
            <Setter Property="AutomationProperties.Name" Value="Navigation" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Grid.Background)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             AutomationProperties.AccessibilityView="Raw" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate x:Key="MenuItemTemplate" x:DataType="vm:MenuItemViewModel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <FontIcon FontSize="16" FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind Icon}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock Text="{x:Bind Label}" Style="{StaticResource BodyTextBlockStyle}" TextWrapping="NoWrap" VerticalAlignment="Center" Grid.Column="1" />
            </Grid>
        </DataTemplate>
        <Style TargetType="controls:MainMenu">
            <Setter Property="ItemTemplate" Value="{StaticResource MenuItemTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource MenuItemContainerStyle}" />
        </Style>

        <CollectionViewSource x:Key="MenuItemsSource" x:Name="MenuItemsSource" IsSourceGrouped="True" />
    </Page.Resources>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeSize}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="spvContent.DisplayMode" Value="CompactInline"/>
                        <Setter Target="spvContent.IsPaneOpen" Value="True"/>
                        <Setter Target="ficTopMenu.Visibility" Value="Visible" />
                        <Setter Target="imgTopMenu.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumSize}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="spvContent.DisplayMode" Value="CompactOverlay"/>
                        <Setter Target="spvContent.IsPaneOpen" Value="False"/>
                        <Setter Target="ficTopMenu.Visibility" Value="Visible" />
                        <Setter Target="imgTopMenu.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallSize}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="spvContent.DisplayMode" Value="Overlay"/>
                        <Setter Target="spvContent.IsPaneOpen" Value="False"/>
                        <Setter Target="ficTopMenu.Visibility" Value="Collapsed" />
                        <Setter Target="imgTopMenu.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:MobileStateTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="spvContent.DisplayMode" Value="Overlay"/>
                        <Setter Target="spvContent.IsPaneOpen" Value="False"/>
                        <Setter Target="ficTopMenu.Visibility" Value="Collapsed" />
                        <Setter Target="imgTopMenu.Visibility" Value="Visible" />
                        <Setter Target="stpMainMenu.VerticalAlignment" Value="Bottom" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView x:Name="spvContent" DisplayMode="Inline" OpenPaneLength="160" LightDismissOverlayMode="On" IsTabStop="False" IsPaneOpen="{x:Bind IsMainMenuOpened, Mode=TwoWay}"
         PaneBackground="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="48"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="stpMainMenu">
                        <ToggleButton x:Name="tbtTopMenu" Style="{StaticResource MainMenuToggleButtonStyle}" Canvas.ZIndex="100" TabIndex="1"
                            IsChecked="{x:Bind IsMainMenuOpened, Mode=TwoWay}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <FontIcon x:Name="ficTopMenu" FontSize="16" FontFamily="Segoe MDL2 Assets" Glyph="&#xE700;" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="Money"/>
                                <Image x:Name="imgTopMenu" Width="32" Height="32" Source="{StaticResource SquareLogo44Image}" />
                                <TextBlock Text="Money" Style="{StaticResource BodyTextBlockStyle}" TextWrapping="NoWrap" VerticalAlignment="Center" Grid.Column="1" />
                            </Grid>
                        </ToggleButton>

                        <controls:MainMenu x:Name="mnuMain" ItemsSource="{Binding Source={StaticResource MenuItemsSource}}" ItemInvoked="OnMainMenuItemInvoked" VerticalAlignment="Bottom">
                            <controls:MainMenu.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderContainerStyle>
                                        <Style TargetType="ListViewHeaderItem">
                                            <Setter Property="MinHeight" Value="1" />
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </GroupStyle.HeaderContainerStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </controls:MainMenu.GroupStyle>
                        </controls:MainMenu>
                    </StackPanel>
                </Grid>
            </SplitView.Pane>

            <SplitView.Content>
                <!-- OnNavigatingToPage we synchronize the selected item in the nav menu with the current page.-->
                <Grid>
                    <Frame x:Name="frmContent">
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition>
                                    <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                        <EntranceNavigationTransitionInfo/>
                                    </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                </NavigationThemeTransition>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>
                    <controls:Loading x:Name="loaContent" />
                </Grid>
            </SplitView.Content>
        </SplitView>
    </Grid>
</Page>
