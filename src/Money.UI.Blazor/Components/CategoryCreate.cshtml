
@inject ICommandDispatcher Commands

<div class="modal fade" id="@Id" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Create a new Category</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="category-name">Name:</label>
                    <input type="text" class="form-control" id="category-name" placeholder="Category Name" @bind(Name) />
                </div>
                <div class="form-group">
                    <label for="category-description">Description:</label>
                    <input type="text" class="form-control" id="category-description" placeholder="Category Description" @bind(Description) />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick(OnCreateClick)>Create</button>
            </div>
        </div>
    </div>
</div>

@functions {

    public string Id { get; set; }

    public string Name { get; set; }
    public string Description { get; set; }

    protected async void OnCreateClick()
    {
        if (!String.IsNullOrEmpty(Name))
        {
            await Commands.HandleAsync(new CreateCategory(Name, Description, Color.FromArgb(255, 0, 191, 255)));
            Name = Description = String.Empty;
            StateHasChanged();
        }
    }

}
