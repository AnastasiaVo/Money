@using Neptuo.Models.Keys
@inject ICommandDispatcher Commands

<Modal Title="Change a description of the outcome" PrimaryButtonText="Save" PrimaryButtonClick="@OnSaveClick" bind-IsVisible="@IsVisible" Closed="@OnModalClosed">
    <div class="form-group">
        <label for="outcome-description">Description:</label>
        <input type="text" class="form-control" id="outcome-description" placeholder="Outcome Description" data-autofocus bind="@Description" />
    </div>
</Modal>

@functions {

    private string originalDescription;

    public bool IsVisible { get; set; }
    public Action Closed { get; set; }

    public IKey OutcomeKey { get; set; }
    public string Description { get; set; }

    protected override void OnParametersSet()
    {
        originalDescription = Description;
    }

    protected bool OnSaveClick()
    {
        if (originalDescription != Description)
        {
            Execute();
            OnParametersSet();
            return true;
        }
        else
        {
            return false;
        }
    }

    private async void Execute()
    {
        await Commands.HandleAsync(new ChangeOutcomeDescription(OutcomeKey, Description));
    }

    protected void OnModalClosed()
    {
        IsVisible = false;
        Closed?.Invoke();
    }
}
