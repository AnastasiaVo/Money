@using Neptuo.Models.Keys
@inject ICommandDispatcher Commands

<div class="modal fade" id="@Id" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Pick a Category Icon</h4>
            </div>
            <div class="modal-body">
                @foreach (string icon in Icons)
                {
                    <button class="btn btn-link btn-icon" @onclick(() => Icon = icon)>
                        @icon
                    </button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick(OnSaveClick)>Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@functions {

    protected IconCollection Icons { get; set; } = new IconCollection();

    private string originalIcon;


    public string Id { get; set; }


    public IKey CategoryKey { get; set; }

    public string Icon { get; set; }

    protected override void OnParametersSet()
    {
        originalIcon = Icon;
    }

    protected async void OnSaveClick()
    {
        if (originalIcon != Icon)
        {
            await Commands.HandleAsync(new ChangeCategoryIcon(CategoryKey, Icon));
            originalIcon = Icon;
        }
    }
}
