@page "/categories"
@inherits CategoriesBase

<Title Icon="tag" Main="Categories" Sub="List of categories you distribute outcomes into" ButtonText="New Category" ButtonClick="@(() => { IsCreateVisible = true; StateHasChanged(); })" />
<ExceptionPanel />

<CategoryName bind-IsVisible="@IsCreateVisible" />
<Confirm Context="@Delete" />

@if (Models.Count == 0)
{
    <Alert Title="No data." Message="Try adding some categories." Mode="@AlertMode.Warning" />
}
else
{
    @foreach (var item in Models)
    {
        <div class="alert" style="background-color: @item.Color.ToHashCode()">
            @if (item.Icon != null)
            {
                <span>@item.Icon</span>
            }
            <strong>
                @item.Name
            </strong>
            <span class="gray">
                @item.Description
            </span>

            <div class="nav navbar-nav navbar-right">
                <IconButton Icon="pencil" ToolTip="Rename" Click="@(() => { Selected = item; IsNameEditVisible = true; StateHasChanged(); })" />
                <IconButton Icon="picture" ToolTip="Icon" Click="@(() => { Selected = item; IsIconEditVisible = true; StateHasChanged(); })" />
                <IconButton Icon="tint" ToolTip="Color" Click="@(() => { Selected = item; IsColorEditVisible = true; StateHasChanged(); })" />
                <IconButton Icon="remove" ToolTip="Delete" Click="@(() => { OnDeleteClick(item); StateHasChanged(); })" />
            </div>
        </div>
    }
}

<CategoryName CategoryKey="@Selected?.Key" Name="@Selected?.Name" Description="@Selected?.Description" bind-IsVisible="@IsNameEditVisible" />
<CategoryIcon CategoryKey="@Selected?.Key" Icon="@Selected?.Icon" bind-IsVisible="@IsIconEditVisible" />
<CategoryColor CategoryKey="@Selected?.Key" Color="@Selected?.Color" bind-IsVisible="@IsColorEditVisible" />
