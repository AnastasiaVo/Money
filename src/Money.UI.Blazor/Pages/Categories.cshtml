@page "/categories"
@inherits CategoriesBase

<Title Icon="tag" Main="Categories" Sub="List of categories you distribute outcomes into" ButtonText="New Category" ButtonClick="@(() => { IsCreateVisible = true; StateHasChanged(); })" />
<ExceptionPanel />

<CategoryName bind-IsVisible="@IsCreateVisible" />
<Confirm Context="@Delete" />

<Loading Context="@Loading">
    @if (Models.Count == 0)
    {
        <Alert Title="No data." Message="Try adding some categories." Mode="@AlertMode.Warning" />
    }
    else
    {
        @foreach (var item in Models)
        {
            <div class="alert" style="background-color: @item.Color.ToHashCode()">
                @if (item.Icon != null)
                {
                    <span>@item.Icon</span>
                }
                <strong>
                    @item.Name
                </strong>
                <span class="gray">
                    @item.Description
                </span>

                <div class="nav navbar-nav navbar-right">
                    <IconButton Icon="pencil" ToolTip="Rename" Click="@(() => OnActionClick(item, ref IsNameEditVisible))" />
                    <IconButton Icon="picture" ToolTip="Icon" Click="@(() => OnActionClick(item, ref IsIconEditVisible))" />
                    <IconButton Icon="tint" ToolTip="Color" Click="@(() => OnActionClick(item, ref IsColorEditVisible))" />
                    <IconButton Icon="remove" ToolTip="Delete" Click="@(() => OnDeleteClick(item))" />
                </div>
            </div>
        }
    }
</Loading>

<CategoryName CategoryKey="@Selected?.Key" Name="@Selected?.Name" Description="@Selected?.Description" bind-IsVisible="@IsNameEditVisible" />
<CategoryIcon CategoryKey="@Selected?.Key" Icon="@Selected?.Icon" bind-IsVisible="@IsIconEditVisible" />
<CategoryColor CategoryKey="@Selected?.Key" Color="@Selected?.Color" bind-IsVisible="@IsColorEditVisible" />
