@page "/outcomes/{Year}/{Month}"
@page "/overview/{Year}/{Month}"
@page "/overview/{Year}/{Month}/{CategoryGuid}"

@page "/{Year}/{Month}/overview"
@page "/{Year}/{Month}/overview/{CategoryGuid}"
@inherits OverviewBase

<Title Icon="calendar" Main="@Title" Sub="List of each single outcome in selected month" ButtonText="New Outcome" ButtonClick="@(() => { IsCreateVisible = true; StateHasChanged(); })" />
<ExceptionPanel />

<OutcomeCreate bind-IsVisible="@IsCreateVisible" CategoryKey="@CategoryKey" />
<Confirm Context="@Delete" />

<Loading Context="@Loading">
    @if (Models != null)
    {
        if (Models.Count > 0)
        {
            <table class="outcomes table table-hover">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>When</th>
                        <th>Amount</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Models)
                    {
                        <tr>
                            <td>@item.Description</td>
                            <td>@item.When.ToShortDateString()</td>
                            <td>@FormatPrice(item.Amount)</td>
                            <td>
                                <div class="actions">
                                    <IconButton Icon="usd" ToolTip="Change Amount" Click="@(() => { Selected = item; IsAmountEditVisible = true; StateHasChanged(); })" />
                                    <IconButton Icon="comment" ToolTip="Change Description" Click="@(() => { Selected = item; IsDescriptionEditVisible = true; StateHasChanged(); })" />
                                    <IconButton Icon="calendar" ToolTip="Change When" Click="@(() => { Selected = item; IsWhenEditVisible = true; StateHasChanged(); })" />
                                    <IconButton Icon="remove" ToolTip="Delete" Click="@(() => { OnDeleteClick(item); StateHasChanged(); })" />
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <Alert Title="No data." Message="Try adding some outcomes." Mode="@AlertMode.Warning" />
        }
    }
</Loading>

@if (Selected != null)
{
    <OutcomeAmount OutcomeKey="@Selected.Key" Amount="@Selected.Amount.Value" Currency="@Selected.Amount.Currency" bind-IsVisible="@IsAmountEditVisible" />
    <OutcomeDescription OutcomeKey="@Selected.Key" Description="@Selected.Description" bind-IsVisible="@IsDescriptionEditVisible" />
    <OutcomeWhen OutcomeKey="@Selected.Key" When="@Selected.When" bind-IsVisible="@IsWhenEditVisible" />
}