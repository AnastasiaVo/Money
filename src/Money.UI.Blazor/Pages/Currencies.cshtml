@page "/currencies"
@inject ICommandDispatcher Commands
@inject IEventHandlerCollection EventHandlers
@inject IQueryDispatcher Queries

<h1>
    Currencies

    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#currency-create" style="float: right">
        <span class="glyphicon glyphicon-plus"></span>
        New Currency
    </button>
</h1>

<Alert Message="Until exchange rates are implemented, all currencies are converted 1:1 and outcomes are displayed in default currency." Mode="AlertMode.Warning" />

<CurrencyEdit id="currency-create" />

@{
    int i = 0;
}
@foreach (var item in Models)
{
    i++;
    string editId1 = i + "-edit";
    string editId2 = editId1;

    <div class="panel panel-default">
        <div class="panel-heading">
            <strong>
                @item.Symbol
            </strong>
        </div>
        <div class="panel-body">
            <ul class="nav navbar-nav navbar-right">
                <li>
                    <button type="submit" class="btn btn-link navbar-btn navbar-link" title="Rename" data-toggle="modal" data_target="#@editId1">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </button>
                </li>
                @if (!item.IsDefault)
                {
                    <li>
                        <button type="submit" class="btn btn-link navbar-btn navbar-link" title="Set as default" @onclick(() => OnChangeDefaultClick(item)) >
                            <span class="glyphicon glyphicon-home"></span>
                        </button>
                    </li>
                }
                @if (Models.Count > 1 && !item.IsDefault)
                {
                    <li>
                        <button type="submit" class="btn btn-link navbar-btn navbar-link" title="Delete" @onclick(() => OnDeleteClick(item))>
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </li>
                }
            </ul>

            <p>This currency has unique code @item.UniqueCode.</p>
            @if(item.IsDefault)
            {
                <p>This is a default currency used for displaying outcomes.</p>
            }
        </div>
    </div>

    <CurrencyEdit Id="@editId2" UniqueCode="@item.UniqueCode" Symbol="@item.Symbol" />
}

@functions {

    private static CurrencyEventHandler handler;

    public List<CurrencyModel> Models { get; private set; } = new List<CurrencyModel>();

    protected override async Task OnInitAsync()
    {
        if (handler == null)
        {
            handler = new CurrencyEventHandler(OnEvent);
            EventHandlers.AddAll(handler);
        }
        else
        {
            handler.Handler = OnEvent;
        }

        await LoadDataAsync();
    }

    protected async void OnEvent()
    {
        await LoadDataAsync();
        StateHasChanged();
    }

    protected async Task LoadDataAsync() => Models = await Queries.QueryAsync(new ListAllCurrency());

    protected async void OnDeleteClick(CurrencyModel model)
    {
        await Commands.HandleAsync(new DeleteCurrency(model.UniqueCode));
    }

    protected async void OnChangeDefaultClick(CurrencyModel model)
    {
        await Commands.HandleAsync(new SetCurrencyAsDefault(model.UniqueCode));
    }

}