@typeparam T
@inherits OverviewModel<T>

<Money.Components.Title Icon="calendar" Main="@Title" Sub="@SubTitle" ButtonText="New Outcome" ButtonClick="@(() => { IsCreateVisible = true; StateHasChanged(); })" />
<ExceptionPanel />

<OutcomeCreate @bind-IsVisible="@IsCreateVisible" CategoryKey="@CategoryKey" />
<Confirm Context="@Delete" />

<div class="overview">
    <Loading Context="@Loading" IsOverlay="true">
        @if (Items != null)
        {
            if (Items.Count > 0)
            {
                <SortButton TType="@OutcomeOverviewSortType" @bind-Current="@SortDescriptor" Changed="@OnSortChanged" />
                <div class="clear"></div>

                <div class="cards">
                    <CascadingValue Value="@this">
                        @foreach (var item in Items)
                        {
                            <OutcomeCard Model="@item" />
                        }
                    </CascadingValue>
                </div>

                <Paging LoadPageAsync="@LoadDataAsync" />
            }
            else
            {
                <Alert Title="No data." Message="Try adding some outcomes." Mode="@AlertMode.Warning" />
            }
        }
    </Loading>
</div>

@if (SelectedItem != null)
{
    <OutcomeAmount OutcomeKey="@SelectedItem.Key" Amount="@SelectedItem.Amount.Value" Currency="@SelectedItem.Amount.Currency" @bind-IsVisible="@IsAmountEditVisible" />
    <OutcomeDescription OutcomeKey="@SelectedItem.Key" Description="@SelectedItem.Description" @bind-IsVisible="@IsDescriptionEditVisible" />
    <OutcomeWhen OutcomeKey="@SelectedItem.Key" When="@SelectedItem.When" @bind-IsVisible="@IsWhenEditVisible" />
}