@typeparam T

<Money.Components.Title Icon="signal" Main="Summary" Sub="@SubTitle" ButtonText="New Expense" ButtonClick="@CreateNewExpense" />
<ExceptionPanel />

<OutcomeCreate @ref="CreateModal" />

<div class="summary">
    <ExpenseBagPublishButton Text="You have expenses created when offline. Upload them now..." class="mb-4" />

    <Loading Context="@Loading">

        @if (Periods != null)
        {
            @if (Periods.Count == 0)
            {
                <Alert Title="No data." Message="Let's add some expenses." Mode="@AlertMode.Warning" />
            }
            else
            {
                @if (SelectedPeriod != null)
                {
                    <div class="mb-1">
                        <SortButton TType="SummarySortType" @bind-Current="@SortDescriptor" Changed="@OnSorted" />

                        <button type="button" class="btn btn-primary" @onclick="@(() => PeriodSelectorModal.Show())">
                            @SelectedPeriod.ToString()
                        </button>
                    </div>
                }

                @if (Categories != null)
                {
                    <div class="graph">
                        @if (TotalAmout != null)
                        {
                            <div class="card bar-graph bar-graph-summary" @onclick="@(() => OpenOverview(SelectedPeriod))">
                                <div class="card-body">
                                    <h3 class="description">
                                        <span class="icon">📈</span>
                                        <span class="name">Summary</span>
                                    </h3>

                                    <div class="value">
                                        <div class="amount">@FormatPrice(TotalAmout)</div>
                                    </div>
                                </div>
                            </div>
                        }

                        @foreach (var category in Categories)
                        {
                            <div class="card bar-graph" @onclick="@(() => OpenOverview(SelectedPeriod, category.Key))">
                                <div class="card-body">
                                    <h3 class="description" title="@category.Description">
                                        <span class="icon">@category.Icon</span>
                                        <span class="name">@category.Name</span>
                                    </h3>

                                    <div class="value">
                                        <div class="amount">@FormatPrice(category.TotalAmount)</div>
                                        <div class="bar" style="width: @GetPercentualValue(category)%; background-color: @category.Color.ToHashCode();"></div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }

                <Modal @ref="PeriodSelectorModal" Title="Select a period" BodyCssClass="p-0">
                    @if (Periods != null)
                    {
                        if (Periods.Count > 0)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var item in Periods)
                                {
                                    <a @onclick="@(() => PeriodSelectorModal.Hide())" href="@UrlSummary(item)" class="list-group-item @(item.Equals(SelectedPeriod) ? "active" : null)">
                                        @item.ToString()
                                    </a>
                                }
                            </div>
                        }
                    }
                </Modal>
            }
        }
    </Loading>
</div>